// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	domain_model "github.com/felipevillarrealdaza/go-service-template/internal/mediator/domain_model"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// OrderMediator is an autogenerated mock type for the OrderMediator type
type OrderMediator struct {
	mock.Mock
}

// CalculateOrderPacks provides a mock function with given fields: ctx, orderId
func (_m *OrderMediator) CalculateOrderPacks(ctx context.Context, orderId uuid.UUID) (domain_model.OrderPacks, error) {
	ret := _m.Called(ctx, orderId)

	if len(ret) == 0 {
		panic("no return value specified for CalculateOrderPacks")
	}

	var r0 domain_model.OrderPacks
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) (domain_model.OrderPacks, error)); ok {
		return rf(ctx, orderId)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) domain_model.OrderPacks); ok {
		r0 = rf(ctx, orderId)
	} else {
		r0 = ret.Get(0).(domain_model.OrderPacks)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, orderId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateOrder provides a mock function with given fields: ctx, order
func (_m *OrderMediator) CreateOrder(ctx context.Context, order domain_model.Order) error {
	ret := _m.Called(ctx, order)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrder")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain_model.Order) error); ok {
		r0 = rf(ctx, order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOrderMediator creates a new instance of OrderMediator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderMediator(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderMediator {
	mock := &OrderMediator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
